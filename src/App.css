#root {
  padding: 0 2rem 1rem;
  width: calc(100vw - 4rem);
  min-height: calc(100vh - 1.5rem);
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
  column-gap: 1rem;
  grid-template-areas:
    "header header"
    "aside main";
}

#root > header {
  grid-area: header;
  position: sticky;
  padding-top: 2rem;
  padding-bottom: 1rem;
  top: 0;
  background-color: white;

  & h1 {
    margin: 0;
    font-size: 2rem;
  }
}

aside {
  grid-area: aside;
  position: sticky;
  top: calc(5rem + 4px);
  max-height: calc(100vh - 7rem);
  display: flex;
  flex-direction: column;
}

main {
  grid-area: main;
  padding-bottom: 10rem;
  min-width: 0;

  & h2 {
    margin: 0;
    padding: 0;
    position: sticky;
    top: calc(5rem + 3px);
    background-color: white;
  }

  & details {
    overflow-wrap: break-word;
    hyphens: auto;
  }
}

/* React Aria's Tabs */

.react-aria-Tabs {
  display: flex;
  color: var(--text-color);

  &[data-orientation="horizontal"] {
    flex-direction: column;
  }
}

.react-aria-TabList {
  display: flex;
  position: sticky;
  top: calc(7.5rem - 1px);
  background-color: white;

  &[data-orientation="horizontal"] {
    border-bottom: 1px solid var(--border-color);

    .react-aria-Tab {
      border-bottom: 3px solid var(--border-color);
    }
  }
}

.react-aria-Tab {
  padding: 10px;
  cursor: default;
  outline: none;
  position: relative;
  color: var(--text-color-base);
  transition: color 200ms;
  --border-color: transparent;
  forced-color-adjust: none;

  &[data-hovered],
  &[data-focused] {
    color: var(--text-color-hover);
  }

  &[data-selected] {
    --border-color: var(--highlight-background);
    color: var(--text-color);
  }

  &[data-disabled] {
    color: var(--text-color-disabled);
    &[data-selected] {
      --border-color: var(--text-color-disabled);
    }
  }

  &[data-focus-visible]:after {
    content: "";
    position: absolute;
    inset: 4px;
    border-radius: 4px;
    border: 2px solid var(--focus-ring-color);
  }
}

.react-aria-TabPanel {
  margin-top: 4px;
  padding: 10px;
  border-radius: 4px;
  outline: none;

  &[data-focus-visible] {
    outline: 2px solid var(--focus-ring-color);
  }
}

/* React Aria's ListBox */

.react-aria-ListBox {
  display: flex;
  flex-direction: column;
  max-height: inherit;
  overflow: auto;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background: var(--overlay-background);
  forced-color-adjust: none;
  outline: none;
  height: 100%;
  box-sizing: border-box;

  &[data-focus-visible] {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: -1px;
  }

  .react-aria-Section:not(:first-child) {
    margin-top: 12px;
  }

  .react-aria-Header {
    font-size: 1rem;
    font-weight: bold;
    padding: 0.25rem 0.75rem;
  }
}

.react-aria-ListBoxItem {
  margin: 2px;
  padding: 0.35rem 0.75rem;
  border-radius: 6px;
  outline: none;
  cursor: default;
  color: var(--text-color);
  font-size: 1rem;
  position: relative;
  display: flex;
  flex-direction: column;

  &[data-focus-visible] {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: -2px;
  }

  &[data-selected] {
    background: var(--highlight-background);
    color: var(--highlight-foreground);

    &[data-focus-visible] {
      outline-color: var(--highlight-foreground);
      outline-offset: -4px;
    }
  }
}

/* React Aria's RadioGroup */

.react-aria-RadioGroup {
  font-size: 0.9rem;
  padding: 0.5rem 0.5rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  color: var(--text-color);

  .react-aria-Label {
    flex-grow: 1;
  }
}

.react-aria-Radio {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.25rem;
  color: var(--text-color);
  forced-color-adjust: none;

  &:before {
    content: "";
    display: block;
    width: 1rem;
    height: 1rem;
    box-sizing: border-box;
    border: 0.143rem solid var(--border-color);
    background: var(--field-background);
    border-radius: 1rem;
    transition: all 200ms;
  }

  &[data-pressed]:before {
    border-color: var(--border-color-pressed);
  }

  &[data-selected] {
    &:before {
      border-color: var(--highlight-background);
      border-width: 0.35rem;
    }

    &[data-pressed]:before {
      border-color: var(--highlight-background-pressed);
    }
  }

  &[data-focus-visible]:before {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: 2px;
  }
}
